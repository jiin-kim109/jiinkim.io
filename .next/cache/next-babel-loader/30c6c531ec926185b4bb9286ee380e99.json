{"ast":null,"code":"var _jsxFileName = \"/Users/jiinkim/Desktop/Projects/portfolio/pages/_document.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport React from 'react';\nimport theme from '../src/theme';\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const styledComponentsSheet = new ServerStyleSheet();\n    const materialSheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => styledComponentsSheet.collectStyles(__jsx(App, _extends({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 49\n          }\n        })))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }\n        }, initialProps.styles, materialSheets.getStyleElement(), styledComponentsSheet.getStyleElement())\n      });\n    } finally {\n      styledComponentsSheet.seal();\n    }\n  }\n\n  render() {\n    return __jsx(Html, {\n      lang: \"en\",\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jiinkim/Desktop/Projects/portfolio/pages/_document.tsx"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheet","ServerStyleSheets","React","theme","MyDocument","getInitialProps","ctx","styledComponentsSheet","materialSheets","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal","render","palette","primary","main"],"mappings":";;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBT,QAAzB,CAAkC;AAC/C,eAAaU,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,qBAAqB,GAAG,IAAIP,gBAAJ,EAA9B;AACA,UAAMQ,cAAc,GAAG,IAAIP,iBAAJ,EAAvB;AACA,UAAMQ,kBAAkB,GAAGH,GAAG,CAACI,UAA/B;;AAEA,QAAI;AACFJ,MAAAA,GAAG,CAACI,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IACnBN,qBAAqB,CAACO,aAAtB,CAAoC,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApC;AAFe,OAAD,CADpB;;AAMA,YAAME,YAAY,GAAG,MAAMpB,QAAQ,CAACU,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACKS,YADL;AAEEC,QAAAA,MAAM,EACJ,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,YAAY,CAACC,MADhB,EAEGR,cAAc,CAACS,eAAf,EAFH,EAGGV,qBAAqB,CAACU,eAAtB,EAHH;AAHJ;AAUD,KAlBD,SAkBU;AACRV,MAAAA,qBAAqB,CAACW,IAAtB;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,GAAG,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,OAAO,EAAEhB,KAAK,CAACiB,OAAN,CAAcC,OAAd,CAAsBC,IAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAOE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,6EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAbF,CADF;AAoBD;;AAjD8C","sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components'\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport React from 'react';\nimport theme from '../src/theme';\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const styledComponentsSheet = new ServerStyleSheet()\n    const materialSheets = new ServerStyleSheets()\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: (App) => (props) =>\n            styledComponentsSheet.collectStyles(<App {...props} />),\n        })\n\n      const initialProps = await Document.getInitialProps(ctx)\n      return {\n        ...initialProps,\n        styles: (\n          <React.Fragment>\n            {initialProps.styles}\n            {materialSheets.getStyleElement()}\n            {styledComponentsSheet.getStyleElement()}\n          </React.Fragment>\n        ),\n      }\n    } finally {\n      styledComponentsSheet.seal()\n    }\n  }\n  render() {\n    return (\n      <Html lang=\"en\" dir=\"ltr\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n          {/* PWA primary color */}\n          <meta\n            name=\"theme-color\"\n            content={theme.palette.primary.main}\n          />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}