{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jiinkim/Desktop/dev/portfolio/pages/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withLayout from \"../components/Layout\";\n\nvar Index = function Index() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Hello\"));\n};\n/*\nexport const getStaticProps: GetStaticProps = async () => {\n  //const res = await fetch('https://.../posts')\n  //const posts = await res.json()\n  const channels: Array<object> = [];\n  await db.collection(\"room\").get()\n      .then(snapshot => snapshot.forEach(doc => {\n          channels.push({\n              id: doc.id,\n              name: doc.data().name\n          })\n      }))\n  return {\n    props: {\n      channels,\n    },\n  }\n}\n*/\n\n\n_c = Index;\nexport default _c2 = withLayout(Index);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jiinkim/Desktop/dev/portfolio/pages/index.tsx"],"names":["withLayout","Index"],"mappings":";;;;;AAGA,OAAOA,UAAP,MAAuB,sBAAvB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADU;AAAA,CAAd;AAMA;;;;;;;;;;;;;;;;;;;;;KANMA,K;AA0BN,qBAAeD,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import Link from 'next/link';\nimport { GetStaticProps, InferGetStaticPropsType } from 'next'\nimport db from \"../src/firebase\";\nimport withLayout from \"../components/Layout\"\nimport styled from 'styled-components';\n\nconst Index = () => (\n    <div>\n        <h2>Hello</h2>\n    </div>\n)\n\n/*\nexport const getStaticProps: GetStaticProps = async () => {\n  //const res = await fetch('https://.../posts')\n  //const posts = await res.json()\n  const channels: Array<object> = [];\n  await db.collection(\"room\").get()\n      .then(snapshot => snapshot.forEach(doc => {\n          channels.push({\n              id: doc.id,\n              name: doc.data().name\n          })\n      }))\n  return {\n    props: {\n      channels,\n    },\n  }\n}\n*/\n\nexport default withLayout(Index);"]},"metadata":{},"sourceType":"module"}